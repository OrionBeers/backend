name: Deploy Firebase Functions (Python, on main)

on:
  push:
    branches: [ "main" ]
    paths:
      - "functions/**"
      - "firebase.json"
      - ".firebaserc"
      - ".github/workflows/deploy-functions.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Firebase CLI
        run: npm i -g firebase-tools

      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: "pip"
          cache-dependency-path: |
            functions/requirements.txt

      - name: Create & prime venv for Functions
        working-directory: functions
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Create Service Account Key
        run: |
          echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > serviceAccountKey.json

      - name: Deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          MONGO_USER: ${{ secrets.MONGO_USER }}
          MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
          MONGO_CLUSTER: ${{ secrets.MONGO_CLUSTER }}
          OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
        run: |
          firebase deploy \
            --only functions \
            --non-interactive \
            --force

      - name: Cleanup Service Account Key
        if: always()
        run: |
          rm -f serviceAccountKey.json
          echo "Service account key file cleaned up"
